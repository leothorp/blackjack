// Generated by CoffeeScript 1.10.0
var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

window.CardView = (function(superClass) {
  extend(CardView, superClass);

  function CardView() {
    return CardView.__super__.constructor.apply(this, arguments);
  }

  CardView.prototype.className = 'card';

  CardView.prototype.template = _.template('<%= rankName %> of <%= suitName %>');

  CardView.prototype.initialize = function() {
    return this.render();
  };

  CardView.prototype.render = function() {
    var loc;
    this.$el.children().detach();
    if (!this.model.get('revealed')) {
      this.$el.addClass('covered');
    }
    if (this.$el.hasClass('covered')) {
      loc = 'card-back.png';
    } else {
      loc = 'cards/' + this.model.get('rankName').toString().toLowerCase() + '-' + this.model.get('suitName').toLowerCase() + '.png';
    }
    return this.$el.append('<image src="img/' + loc + '" height="100%" width="100%" margin="auto"></image>');
  };

  return CardView;

})(Backbone.View);
